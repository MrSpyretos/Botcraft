// <auto-generated />
using System;
using Botcraft;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Botcraft.Migrations
{
    [DbContext(typeof(DiscbotContext))]
    partial class DiscbotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Botcraft.Database.Entities.AwaySystem", b =>
                {
                    b.Property<long>("AwayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TimeAway")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AwayId");

                    b.ToTable("AwaySystem");
                });

            modelBuilder.Entity("Botcraft.Database.Entities.ChannelOutput", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ChannelId")
                        .HasColumnType("bigint");

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ServerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SetById")
                        .HasColumnType("bigint");

                    b.Property<string>("SetByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SetTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ChannelOutputs");
                });

            modelBuilder.Entity("Botcraft.Database.Entities.Giphy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("GiphyEnabled")
                        .HasColumnType("bit");

                    b.Property<long?>("ServerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Giphy");
                });

            modelBuilder.Entity("Botcraft.Database.Entities.Note", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ServerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SetById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TimeSet")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Botcraft.Database.Entities.ServerGreeting", b =>
                {
                    b.Property<long>("DiscordGuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("GreetUsers")
                        .HasColumnType("bit");

                    b.Property<string>("Greeting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GreetingChannelId")
                        .HasColumnType("bigint");

                    b.Property<string>("GreetingChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartingMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SetById")
                        .HasColumnType("bigint");

                    b.Property<string>("SetByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeSet")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscordGuildId");

                    b.ToTable("ServerGreetings");
                });

            modelBuilder.Entity("Botcraft.Database.Entities.Warnings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IssuerId")
                        .HasColumnType("bigint");

                    b.Property<string>("IssuerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumWarnings")
                        .HasColumnType("int");

                    b.Property<long>("ServerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeIssued")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserWarnedId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserWarnedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Warnings");
                });

            modelBuilder.Entity("Botcraft.Database.Entities.WordList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ServerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SetById")
                        .HasColumnType("bigint");

                    b.Property<string>("Word")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WordList");
                });

            modelBuilder.Entity("Botcraft.Entities.AutoRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("RoleId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("ServerId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("AutoRoles");
                });

            modelBuilder.Entity("Botcraft.Entities.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("RoleId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("ServerId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("Botcraft.Entities.Server", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Logs")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Welcome")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });
#pragma warning restore 612, 618
        }
    }
}
